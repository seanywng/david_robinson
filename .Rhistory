six_sided(2)
six_sided <- dice(6)
named_vector <- c(a = 1, b = 2, c = 3)
named_vector[["a"]]
letters[1:3] %>% set_names()
my_values <-  c(1, 4, 5, 3, 2)
my_fun <- function(x) {
3 * x + 2
}
my_fun(my_values)
results <- numeric(length(my_values))
results
results[[i]] <- my_fun(my_values[[i]])
for (i in 1:length(my_values)) {
results[[i]] <- my_fun(my_values[[i]])
}
results
results <-  map(my_values, my_fun)
results
mean(results)
results <- map_dbl(my_values, my_fun)
results
map_dbl(my_values, ~ 3 * .x + 2)
my_fun <- function(x, y) {
3 * x + y
}
map_dbl(my_values, my_fun, y = 2)
map_chr(iris, class)
class(iris)
iris %>%
map(unique) %>%
map_dbl(length)
files <- dir("./nhs_webinars/fp_with_purrr/ae_attendances",
"^\\d{4}-\\d{2}-\\d{2}\\.csv$",
full.names = TRUE)
head(files)
map(files, read_csv, col_types = "ccddd")
map_dfr(files, read_csv, col_types == "ccddd")
map_dfr(files, read_csv, col_types = "ccddd")
files %>%
set_names() %>%
map_dfr(read_csv, col_type = "ccddd", .id = "filename") %>%
mutate(period = str_extract(filename,
r"(\d{4}-\d{2}-d{2}(?=\.csv$))") %>%
lubridate::ymd())
files %>%
set_names() %>%
map_dfr(read_csv, col_type = "ccddd", .id = "filename") %>%
mutate(period = str_extract(filename,
"(\d{4}-\d{2}-d{2}(?=\.csv$))") %>%
files %>%
set_names() %>%
map_dfr(read_csv, col_type = "ccddd", .id = "filename") %>%
mutate(period = str_extract(filename,
r"(\d{4}-\d{2}-d{2}(?=\.csv$))") %>%
lubridate::ymd())
files %>%
set_names() %>%
map_dfr(read_csv, col_type = "ccddd", .id = "filename") %>%
mutate(period = str_extract(filename,
r"(\d{4}-\d{2}-\d{2}(?=\.csv$))") %>%
lubridate::ymd())
# map2 takes two vectors as arguments, .x and .y and a binary function .f
map2_dbl(1:3, 4:6, ~ .x * .y)
list(1:3, 4:6, 7:9) %>%
pmap_dbl(function(x, y, x) x * y + z)
list(1:3, 4:6, 7:9) %>%
pmap_dbl(function(x, y, z) x * y + z)
# Unless you have a named vector, then purrr will match the list items to the function arguments
list(a = 1:3, b = 4:6, c = 7:9) %>%
pmap_dbl(function(c, b, a) a * b + c)
ae_attendances <- files %>%
set_names() %>%
map_dfr(read_csv, col_type = "ccddd", .id = "filename") %>%
mutate(period = str_extract(filename,
r"(\d{4}-\d{2}-\d{2}(?=\.csv$))") %>%
lubridate::ymd())
ae_attendances
ae_attendances %>%
filter(str_starts(org_code, "R"))
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum)
groups(.Last.value)
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
# He thinks it's a lot neater than:
# summarise(attendances = sum(attendances))
nest(org_code)
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
# He thinks it's a lot neater than:
# summarise(attendances = sum(attendances))
nest()
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
# He thinks it's a lot neater than:
# summarise(attendances = sum(attendances))
nest() %>%
#if you nest, it will nest by how it is grouped
mutate(has_3_years = map_dbl(data, nrow) == 36)
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest()
plot_fn <- function(org_code, data) {
data %>%
ggplot(aes(x = period, y = attendances)) +
geom_line() +
geom_point() +
labs(title = org_code)
}
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn))
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png"))
# Creating a new folder to store the plots
dir.create("./nhs_webinars/fp_with_purrr/ae_plots")
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10) %>%
pwalk(ggsave)
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10) %>%
pwalk(ggsave(device = "png"))
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10) %>%
pwalk(ggsave(filename = filename, device = "png"))
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10)
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10) %>%
pwalk(ggsave(path = filename, device = "png", ))
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10) %>%
pwalk(ggsave(paste0(filename), plot = plot, width = 11, height = 8.5, units = "in"))
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10)
ae_attendances %>%
filter(str_starts(org_code, "R")) %>%
group_by(org_code, period) %>%
summarise_at("attendances", sum) %>%
nest() %>%
filter(map_dbl(data, nrow) == 36) %>%
# Creating a column in a dataframe for the plot? Let's see how this works
mutate(plot = map2(org_code, data, plot_fn)) %>%
mutate(filename = paste0("ae_plot/", org_code, ".png")) %>%
ungroup() %>%
select(-org_code, -data) %>%
head(10) %>%
pwalk(ggsave)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
sports_raw <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-03-29/sports.csv')
glimpse(sports_raw)
sports_raw %>% distinct(sports)
sports_raw %>% count(sports)
sports_parsed <- sports_raw %>%
mutate(sports = case_when(
str_detect(sports, "Swimming") ~ "Swimming and Diving",
str_detect(sports, "Diving") ~ "Swimming and Diving",
str_detect(sports, "Track") ~ "Track",
TRUE ~ sports
))
sports_parsed %>% count(sports)
sports_parsed %>%
select(year, institution_name, sport, participants = partic_men, revenue = rev_men, expenditure = exp_men) %>%
mutate(gender = "men") %>%
bind_rows(
sports_parsed(year, institution_name, sport, participants = partic_women, revenue = rev_women, expenditure = epx_women) %>%
mutate(gender = "women")
)
sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_men, revenue = rev_men, expenditure = exp_men) %>%
mutate(gender = "men") %>%
bind_rows(
sports_parsed(year, institution_name, sport = sports, participants = partic_women, revenue = rev_women, expenditure = epx_women) %>%
mutate(gender = "women")
)
sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_men, revenue = rev_men, expenditure = exp_men) %>%
mutate(gender = "men") %>%
bind_rows(
sports_parsed(year, institution_name, sport = sports, participants = partic_women, revenue = rev_women, expenditure = epx_women) %>%
mutate(gender = "women")
)
sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_men, revenue = rev_men, expenditure = exp_men) %>%
mutate(gender = "men") %>%
bind_rows(
sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_women, revenue = rev_women, expenditure = epx_women) %>%
mutate(gender = "women")
)
sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_men, revenue = rev_men, expenditure = exp_men) %>%
mutate(gender = "men") %>%
bind_rows(
sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_women, revenue = rev_women, expenditure = exp_women) %>%
mutate(gender = "women")
)
# Reorganising the data a little bit
sports <- sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_men, revenue = rev_men, expenditure = exp_men) %>%
mutate(gender = "men") %>%
bind_rows(
sports_parsed %>%
select(year, institution_name, sport = sports, participants = partic_women, revenue = rev_women, expenditure = exp_women) %>%
mutate(gender = "women")
) %>%
na.omit()
sports %>%
mutate(sport = fct_reorder(sport, expenditure)) %>%
ggplto(aes(x = expenditure, y = sport, fill = gender)) +
geom_boxplot(alpha = .5) +
scale_x_continuous(trans = "log10") +
labs(y = "",
fill = "",
title = "Ependitures per team")
sports %>%
mutate(sport = fct_reorder(sport, expenditure)) %>%
ggplot(aes(x = expenditure, y = sport, fill = gender)) +
geom_boxplot(alpha = .5) +
scale_x_continuous(trans = "log10") +
labs(y = "",
fill = "",
title = "Ependitures per team")
theme_set(theme_minimal())
options(scipen = 999)
sports %>%
mutate(sport = fct_reorder(sport, expenditure)) %>%
ggplot(aes(x = expenditure, y = sport, fill = gender)) +
geom_boxplot(alpha = .5) +
scale_x_continuous(trans = "log10") +
labs(y = "",
fill = "",
title = "Ependitures per team")
sports %>%
mutate(sport = fct_reorder(sport, expenditure)) %>%
ggplot(aes(x = expenditure, y = sport, fill = gender)) +
geom_boxplot(alpha = .5) +
scale_x_continuous(trans = "log10", labels = scales::comma) +
labs(y = "",
fill = "",
title = "Ependitures per team")
sports %>%
mutate(sport = fct_reorder(sport, expenditure)) %>%
ggplot(aes(x = expenditure, y = sport, fill = gender)) +
geom_boxplot(alpha = .5) +
scale_x_continuous(trans = "log10", labels = scales::dollar) +
labs(y = "",
fill = "",
title = "Ependitures per team")
sports %>%
mutate(sport = fct_reorder(sport, expenditure)) %>%
ggplot(aes(x = expenditure, y = sport, fill = gender)) +
geom_boxplot(alpha = .5,
# this makes them all the same width
position = position_dodge(preserve = "single")) +
scale_x_continuous(trans = "log10", labels = scales::dollar) +
labs(y = "",
fill = "",
title = "Ependitures per team")
sports %>%
mutate(sport = fct_reorder(sport, expenditure)) %>%
ggplot(aes(x = expenditure, y = sport, fill = gender)) +
geom_boxplot(alpha = .5,
# this makes them all the same width
position = position_dodge(preserve = "single")) +
scale_x_continuous(trans = "log10", labels = scales::dollar) +
labs(y = "",
fill = "",
title = "Ependitures per team") +
scale_fill_brewer(palette = "Dark2") +
theme(legend.position = "top")
ignore_sport <-
lm(expenditure ~ gender + participants, data = sports)
account_sport <-
lm(expenditure ~ gender + participants + sport, data = sport)
account_sport <-
lm(expenditure ~ gender + participants + sport, data = sports)
library(broom)
tidy(ignore_sport)
tidy(ignore_sport) %>%
bind_rows(tidy(account_sport))
bind_rows(tidy(account_sport) %>%
mutate(sport = "account"))
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sports") & term != "(Intercept)")
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sports") & term != "(Intercept)")
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sports") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7) +
geom_point(size = 3)
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7) +
geom_point(size = 3)
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7, height = .5) +
geom_point(size = 3)
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7, width = .5) +
geom_point(size = 3)
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7, width = .1) +
geom_point(size = 3)
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7, width = .1) +
geom_point(size = 3) +
scale_x_continuous(labels = scales::dollar)
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_vline(xintercept = 0, lty = 2, colour = "grey50")
tidy(ignore_sport) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_vline(xintercept = 0, lty = 2, colour = "grey50") +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7, width = .1) +
geom_point(size = 3) +
scale_x_continuous(labels = scales::dollar)
library(rsample)
set.seed(123)
ignore_sport_intervals <-
reg_intervals(expenditure ~ gender + participants, data = sports, times = 500)
set.seed(234)
account_sport_intervals <-
reg_intervals(expenditure ~ gender + participants + sport, data = sports, times = 500)
account_sport_intervals %>%
filter(str_detect(term, "sports")) %>%
arrange(desc(.estimate))
account_sport_intervals %>%
filter(str_detect(term, "sport")) %>%
arrange(desc(.estimate))
tidy(ignore_sport_intervals) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport_intervals) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport") & term != "(Intercept)") %>%
ggplot(aes(x = estimate, y = term, colour = sport)) +
geom_vline(xintercept = 0, lty = 2, colour = "grey50") +
geom_errorbar(aes(xmin = estimate + std.error, xmax = estimate - std.error),
size = 1.4, alpha = .7, width = .1) +
geom_point(size = 3) +
scale_x_continuous(labels = scales::dollar)
tidy(ignore_sport_intervals) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport_intervals) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport")) %>%
ggplot(aes(x = .estimate, y = term, colour = sport)) +
geom_vline(xintercept = 0, lty = 2, colour = "grey50") +
geom_errorbar(aes(xmin = .lower, xmax = .upper),
size = 1.4, alpha = .7, width = .1) +
geom_point(size = 3) +
scale_x_continuous(labels = scales::dollar)
tidy(ignore_sport_intervals) %>%
mutate(sport = "ignore") %>%
bind_rows(tidy(account_sport_intervals) %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport"))
tidy(ignore_sport_intervals)
# you no longer have to tidy since rsamples already produces a tidy output
ignore_sport_intervals %>%
mutate(sport = "ignore") %>%
bind_rows(account_sport_intervals %>%
mutate(sport = "account")) %>%
filter(!str_detect(term, "sport")) %>%
ggplot(aes(x = .estimate, y = term, colour = sport)) +
geom_vline(xintercept = 0, lty = 2, colour = "grey50") +
geom_errorbar(aes(xmin = .lower, xmax = .upper),
size = 1.4, alpha = .7, width = .1) +
geom_point(size = 3) +
scale_x_continuous(labels = scales::dollar)
